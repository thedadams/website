Create Your Own Dynamic DNS Updater

<p>When DynDNS shutdown their free tiers, I, like many people, was left looking for an alternative.  I tried <a href="https://noip.com" target="_blank" title="No-IP">No-IP</a>, but their automatic updater never worked for me.  Therefore, I was left to manually update my dynamic IP every 30 days like some type of animal.  I was already using <a href="https://cloudflare.com" target="_blank" title="CloudFlare">CloudFlare</a> for caching, simple threat identification, and basic analytics (I don't want to use Google), so I decided to make my own dynamic DNS updater using CloudFlare, Python, and launchd.  Before I layout the steps, I will say that <a href="https://dyn.com/remote-access/" target="_blank" title="dynDNS Remote Access">dynDNS Remote Access</a> is $40 per year at the time of this writing.  This is definitely affordable, but a domain name is cheaper and more versatile.  Feel free to follow these steps to setup your own solution.  In order to complete this setup, you need a domain name, a CloudFlare account, and a Mac with python3 installed.</p>
<br>
<p>First we will setup CloudFlare.  You will need to point your domain to CloudFlare's name servers.  If you haven't done this yet, you can follow <a href="https://support.cloudflare.com/hc/en-us/articles/205195708-Step-3-Change-your-domain-name-servers-to-CloudFlare" target="_blank" title="CloudFlare Name servers">these steps</a>.  It might take a couple hours for the DNS to propagate, but CloudFlare will email you when the name servers are updated.  Once your domain is pointing to CloudFlare, you need to setup a new <a href="https://support.cloudflare.com/hc/en-us/articles/200169096-How-do-I-add-A-records-" target="_blank" title="CloudFlare A record">subdomain A record</a>.  You can call the new A record whatever you like, but it should be easy to remember.  For example, I use the subdomain "office."  Simply enter 1.2.3.4 in the IP field; this will be updated by your computer.</p>
<br>
<p>The last thing you need from CloudFlare is your API key.  You can find it by following <a href="https://support.cloudflare.com/hc/en-us/articles/200167836-Where-do-I-find-my-CloudFlare-API-key-" target="_blank" title="CloudFlare API key">these steps</a>.  You should protect this key like a password.</p>
<br>
<p>Now we go to the computer.  The first thing we need to do here is create the Python script used to automatically update your IP address.  You can copy and paste the script <a href="files/CFDNSUpdater.py" target="_blank" title="Python script">here</a>.  Please make sure to replace the pieces in all caps with your information: <code>EMAIL-ADDRESS</code>, <code>YOUR-API-KEY</code>, <code>YOURDOMAIN.COM</code>, and <code>SUBDOMAIN</code>.  Next, download <a href="files/com.USERNAME.cfdns.plist" target="_blank" title="Launchd file">this file</a>, open it in a text editor and replace the pieces in all caps: <code>USERNAME</code> and <code>/COMPLETE/PATH/TO/PYTHON/SCRIPT/</code>.  Once this file is edited, save it as <code>com.USERNAME.cfdns.plist</code> in your Downloads folder, again replacing <code>USERNAME</code> with your username on your computer.</p>
<br>
<p>Next, open a Terminal window and type the following commands:</p>
<br>
<pre>chmod +x /COMPLETE/PATH/TO/PYTHON/SCRIPT
mv ~/Downloads/com.USERNAME.cfdns.plist ~/Library/LaunchAgents/com.USERNAME.cfdns.plist
launchctl load ~/Library/LaunchAgents/com.USERNAME.cfdns.plist</pre>
<br>
<p>That's it!  Every hour, your computer will run the Python script, check to see if your IP address has been changed, and update CloudFlare's settings, if necessary.  If you have any issues or questions, please do not hesitate to contact me via <a href="" target="_blank">Twitter</a> or <a href="" target="_blank">ADN</a>.</p>
<br>
#tags: how-to, cloudflare